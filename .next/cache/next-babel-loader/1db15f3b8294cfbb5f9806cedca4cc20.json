{"ast":null,"code":"import _ from 'lodash';\n/**\n * Get all the pages located under the provided `urlPath`, not including the\n * index page. I.e.: All pages having their URLs start with `urlPath` excluding\n * the page having its URL equal to `urlPath`.\n *\n * @example\n * pages => [\n *   {'__metadata.urlPath': '/'},\n *   {'__metadata.urlPath': '/about'},\n *   {'__metadata.urlPath': '/posts'},\n *   {'__metadata.urlPath': '/posts/hello'},\n *   {'__metadata.urlPath': '/posts/world'}\n * ]\n *\n * getPages(pages, /posts')\n * => [\n *   {'__metadata.urlPath': '/posts/hello'},\n *   {'__metadata.urlPath': '/posts/world'}\n * ]\n *\n *\n * @param {Array} pages Array of page objects. All pages must have '__metadata.urlPath' field.\n * @param {string} urlPath The url path to filter pages by\n * @return {Array}\n */\n\nexport default function getPages(pages, urlPath) {\n  urlPath = _.trim(urlPath, '/');\n\n  const urlPathParts = _.split(urlPath, '/');\n\n  return _.filter(pages, page => {\n    const pageUrlPath = _.trim(_.get(page, '__metadata.urlPath'), '/');\n\n    const pageUrlParts = _.split(pageUrlPath, '/');\n\n    return pageUrlParts.length > urlPathParts.length && _.isEqual(pageUrlParts.slice(0, urlPathParts.length), urlPathParts);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}