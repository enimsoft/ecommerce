{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { getPages, Link, withPrefix, classNames } from '../utils';\n\nvar NavCategories = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavCategories, _React$Component);\n\n  var _super = _createSuper(NavCategories);\n\n  function NavCategories() {\n    _classCallCheck(this, NavCategories);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavCategories, [{\n    key: \"render\",\n    value: function render() {\n      var site = _.get(this.props, 'site', null);\n\n      var page = _.get(this.props, 'page', null);\n\n      var category_pages = _.orderBy(getPages(this.props.pages, '/category'), 'frontmatter.order');\n\n      return __jsx(\"ul\", {\n        className: \"store__nav-items\"\n      }, _.map(category_pages, function (item, item_idx) {\n        var isCurrentPage = _.get(page, '__metadata.urlPath', null) === _.get(item, '__metadata.urlPath', null) ? true : false;\n        return __jsx(React.Fragment, {\n          key: item_idx + '.1'\n        }, __jsx(\"li\", {\n          key: item_idx,\n          className: \"store__nav-item\"\n        }, __jsx(Link, {\n          href: withPrefix(_.get(item, '__metadata.urlPath', null)),\n          className: classNames('store__nav-item-link', {\n            'store__nav-item-link--active': isCurrentPage\n          })\n        }, _.get(item, 'frontmatter.title', null))));\n      }));\n    }\n  }]);\n\n  return NavCategories;\n}(React.Component);\n\nexport { NavCategories as default };","map":null,"metadata":{},"sourceType":"module"}