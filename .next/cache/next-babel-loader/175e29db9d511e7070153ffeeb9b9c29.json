{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport ProductGridItem from './ProductGridItem';\nimport { getPageByFilePath } from '../utils';\nexport default class ProductGrid extends React.Component {\n  render() {\n    let site = _.get(this.props, 'site', null);\n\n    let product_pages = _.get(this.props, 'product_pages', null);\n\n    let listCssClass = _.get(this.props, 'cssClass', null);\n\n    let category_url = _.get(this.props, 'category_url', null);\n\n    return __jsx(\"ul\", {\n      className: 'product-grid ' + (listCssClass ? listCssClass : '')\n    }, _.map(product_pages, (product_page, product_page_idx) => !category_url ? __jsx(ProductGridItem, _extends({\n      key: product_page_idx\n    }, this.props, {\n      product_page: product_page,\n      site: site\n    })) : _.get(product_page, 'frontmatter.category', null) && (() => {\n      let category_page = getPageByFilePath(this.props.pages, _.get(product_page, 'frontmatter.category', null));\n      return category_url === _.get(category_page, '__metadata.urlPath', null) && __jsx(ProductGridItem, _extends({\n        key: product_page_idx + '.1'\n      }, this.props, {\n        product_page: product_page,\n        site: site\n      }));\n    })()));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}